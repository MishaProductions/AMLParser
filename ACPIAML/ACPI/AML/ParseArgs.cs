using System;

namespace ACPILibs.AML
{
	[Flags]
	public enum ParseArgFlags : byte
	{
		None = 0x0,
		ByteData = 0x01,
		ByteList = 0x02,
		CharList = 0x03,
		DataObject = 0x04,
		DataObjectList = 0x05,
		DWordData = 0x06,
		FieldList = 0x07,
		Name = 0x08,
		NameString = 0x09,
		ObjectList = 0x0A,
		PackageLength = 0x0B,
		SuperName = 0x0C,
		Target = 0x0D,
		TermArg = 0x0E,
		TermList = 0x0F,
		WordData = 0x10,
		QWordData = 0x11,
		SimpleName = 0x12,
		NameOrReference = 0x13,
		Max = 0x13,
		Comment = 0x14,
	}

	class ParseArgs
	{
		public static ParseArgFlags[] ARGP_ACCESSFIELD_OP = { ParseArgFlags.NameString };
		public static ParseArgFlags[] ARGP_ACQUIRE_OP = { ParseArgFlags.SuperName, ParseArgFlags.WordData };
		public static ParseArgFlags[] ARGP_ADD_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_ALIAS_OP = { ParseArgFlags.NameString, ParseArgFlags.Name };
		public static ParseArgFlags[] ARGP_ARG0 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_ARG1 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_ARG2 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_ARG3 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_ARG4 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_ARG5 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_ARG6 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_BANK_FIELD_OP = { ParseArgFlags.PackageLength, ParseArgFlags.NameString, ParseArgFlags.NameString, ParseArgFlags.TermArg, ParseArgFlags.ByteData, ParseArgFlags.FieldList };
		public static ParseArgFlags[] ARGP_BIT_AND_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_BIT_NAND_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_BIT_NOR_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_BIT_NOT_OP = { ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_BIT_OR_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_BIT_XOR_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_BREAK_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_BREAK_POINT_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_BUFFER_OP = { ParseArgFlags.PackageLength, ParseArgFlags.TermArg, ParseArgFlags.ByteList };
		public static ParseArgFlags[] ARGP_BYTE_OP = { ParseArgFlags.ByteData };
		public static ParseArgFlags[] ARGP_BYTELIST_OP = { ParseArgFlags.NameString };
		public static ParseArgFlags[] ARGP_COMMENT_OP = { ParseArgFlags.ByteData, ParseArgFlags.Comment };
		public static ParseArgFlags[] ARGP_CONCAT_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_CONCAT_RES_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_COND_REF_OF_OP = { ParseArgFlags.SuperName, ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_CONNECTFIELD_OP = { ParseArgFlags.NameString };
		public static ParseArgFlags[] ARGP_CONTINUE_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_COPY_OP = { ParseArgFlags.TermArg, ParseArgFlags.SimpleName };
		public static ParseArgFlags[] ARGP_CREATE_BIT_FIELD_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Name };
		public static ParseArgFlags[] ARGP_CREATE_BYTE_FIELD_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Name };
		public static ParseArgFlags[] ARGP_CREATE_DWORD_FIELD_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Name };
		public static ParseArgFlags[] ARGP_CREATE_FIELD_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Name };
		public static ParseArgFlags[] ARGP_CREATE_QWORD_FIELD_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Name };
		public static ParseArgFlags[] ARGP_CREATE_WORD_FIELD_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Name };
		public static ParseArgFlags[] ARGP_DATA_REGION_OP = { ParseArgFlags.Name, ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_DEBUG_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_DECREMENT_OP = { ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_DEREF_OF_OP = { ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_DEVICE_OP = { ParseArgFlags.PackageLength, ParseArgFlags.Name, ParseArgFlags.ObjectList };
		public static ParseArgFlags[] ARGP_DIVIDE_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_DWORD_OP = { ParseArgFlags.DWordData };
		public static ParseArgFlags[] ARGP_ELSE_OP = { ParseArgFlags.PackageLength, ParseArgFlags.TermList };
		public static ParseArgFlags[] ARGP_EVENT_OP = { ParseArgFlags.Name };
		public static ParseArgFlags[] ARGP_EXTERNAL_OP = { ParseArgFlags.Name, ParseArgFlags.ByteData, ParseArgFlags.ByteData };
		public static ParseArgFlags[] ARGP_FATAL_OP = { ParseArgFlags.ByteData, ParseArgFlags.DWordData, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_FIELD_OP = { ParseArgFlags.PackageLength, ParseArgFlags.NameString, ParseArgFlags.ByteData, ParseArgFlags.FieldList };
		public static ParseArgFlags[] ARGP_FIND_SET_LEFT_BIT_OP = { ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_FIND_SET_RIGHT_BIT_OP = { ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_FROM_BCD_OP = { ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_IF_OP = { ParseArgFlags.PackageLength, ParseArgFlags.TermArg, ParseArgFlags.TermList };
		public static ParseArgFlags[] ARGP_INCREMENT_OP = { ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_INDEX_FIELD_OP = { ParseArgFlags.PackageLength, ParseArgFlags.NameString, ParseArgFlags.NameString, ParseArgFlags.ByteData, ParseArgFlags.FieldList };
		public static ParseArgFlags[] ARGP_INDEX_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_LAND_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_LEQUAL_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_LGREATER_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_LGREATEREQUAL_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_LLESS_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_LLESSEQUAL_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_LNOT_OP = { ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_LNOTEQUAL_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_LOAD_OP = { ParseArgFlags.NameString, ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_LOAD_TABLE_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_LOCAL0 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_LOCAL1 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_LOCAL2 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_LOCAL3 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_LOCAL4 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_LOCAL5 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_LOCAL6 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_LOCAL7 = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_LOR_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_MATCH_OP = { ParseArgFlags.TermArg, ParseArgFlags.ByteData, ParseArgFlags.TermArg, ParseArgFlags.ByteData, ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_METHOD_OP = { ParseArgFlags.PackageLength, ParseArgFlags.Name, ParseArgFlags.ByteData, ParseArgFlags.TermList };
		public static ParseArgFlags[] ARGP_METHODCALL_OP = { ParseArgFlags.NameString };
		public static ParseArgFlags[] ARGP_MID_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_MOD_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_MULTIPLY_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_MUTEX_OP = { ParseArgFlags.Name, ParseArgFlags.ByteData };
		public static ParseArgFlags[] ARGP_NAME_OP = { ParseArgFlags.Name, ParseArgFlags.DataObject };
		public static ParseArgFlags[] ARGP_NAMEDFIELD_OP = { ParseArgFlags.NameString };
		public static ParseArgFlags[] ARGP_NAMEPATH_OP = { ParseArgFlags.NameString };
		public static ParseArgFlags[] ARGP_NOOP_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_NOTIFY_OP = { ParseArgFlags.SuperName, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_OBJECT_TYPE_OP = { ParseArgFlags.SimpleName };
		public static ParseArgFlags[] ARGP_ONE_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_ONES_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_PACKAGE_OP = { ParseArgFlags.PackageLength, ParseArgFlags.ByteData, ParseArgFlags.DataObjectList };
		public static ParseArgFlags[] ARGP_POWER_RES_OP = { ParseArgFlags.PackageLength, ParseArgFlags.Name, ParseArgFlags.ByteData, ParseArgFlags.WordData, ParseArgFlags.ObjectList };
		public static ParseArgFlags[] ARGP_PROCESSOR_OP = { ParseArgFlags.PackageLength, ParseArgFlags.Name, ParseArgFlags.ByteData, ParseArgFlags.DWordData, ParseArgFlags.ByteData, ParseArgFlags.ObjectList };
		public static ParseArgFlags[] ARGP_QWORD_OP = { ParseArgFlags.QWordData };
		public static ParseArgFlags[] ARGP_REF_OF_OP = { ParseArgFlags.SimpleName };
		public static ParseArgFlags[] ARGP_REGION_OP = { ParseArgFlags.Name, ParseArgFlags.ByteData, ParseArgFlags.TermArg, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_RELEASE_OP = { ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_RESERVEDFIELD_OP = { ParseArgFlags.NameString };
		public static ParseArgFlags[] ARGP_RESET_OP = { ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_RETURN_OP = { ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_REVISION_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_SCOPE_OP = { ParseArgFlags.PackageLength, ParseArgFlags.Name, ParseArgFlags.TermList };
		public static ParseArgFlags[] ARGP_SERIALFIELD_OP = { ParseArgFlags.NameString };
		public static ParseArgFlags[] ARGP_SHIFT_LEFT_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_SHIFT_RIGHT_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_SIGNAL_OP = { ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_SIZE_OF_OP = { ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_SLEEP_OP = { ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_STALL_OP = { ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_STATICSTRING_OP = { ParseArgFlags.NameString };
		public static ParseArgFlags[] ARGP_STORE_OP = { ParseArgFlags.TermArg, ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_STRING_OP = { ParseArgFlags.CharList };
		public static ParseArgFlags[] ARGP_SUBTRACT_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_THERMAL_ZONE_OP = { ParseArgFlags.PackageLength, ParseArgFlags.Name, ParseArgFlags.ObjectList };
		public static ParseArgFlags[] ARGP_TIMER_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARGP_TO_BCD_OP = { ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_TO_BUFFER_OP = { ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_TO_DEC_STR_OP = { ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_TO_HEX_STR_OP = { ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_TO_INTEGER_OP = { ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_TO_STRING_OP = { ParseArgFlags.TermArg, ParseArgFlags.TermArg, ParseArgFlags.Target };
		public static ParseArgFlags[] ARGP_UNLOAD_OP = { ParseArgFlags.SuperName };
		public static ParseArgFlags[] ARGP_VAR_PACKAGE_OP = { ParseArgFlags.PackageLength, ParseArgFlags.TermArg, ParseArgFlags.DataObjectList };
		public static ParseArgFlags[] ARGP_WAIT_OP = { ParseArgFlags.SuperName, ParseArgFlags.TermArg };
		public static ParseArgFlags[] ARGP_WHILE_OP = { ParseArgFlags.PackageLength, ParseArgFlags.TermArg, ParseArgFlags.TermList };
		public static ParseArgFlags[] ARGP_WORD_OP = { ParseArgFlags.WordData };
		public static ParseArgFlags[] ARGP_ZERO_OP = { ParseArgFlags.None };
		public static ParseArgFlags[] ARG_NONE = { ParseArgFlags.None };
	}
}
